C51 COMPILER V9.01   DS18B20_2                                                             01/03/2021 21:46:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20_2
OBJECT MODULE PLACED IN DS18B20_2.obj
COMPILER INVOKED BY: D:\App_program\Keil4\keil4\install_location\C51\BIN\C51.EXE HardWare\DS18B20_2.c BROWSE INCDIR(.\Ha
                    -rdWare;..\LM016L显示时钟和日期) DEBUG OBJECTEXTEND PRINT(.\DS18B20_2.lst) OBJECT(DS18B20_2.obj)

line level    source

   1          #include "reg52.h"                      
   2          #include "DS18B20_2.h"
   3          #include "DS18B20.h"
   4          #include "LM016L.h"
   5          
   6          #define uchar unsigned char
   7          #define uint  unsigned int
   8          
   9          sbit DSPORT     =P3^1;
  10          char p_shi,p_ge1;       //温度显示的十位和个位
  11          
  12          //uint tt = 30;//记录温度
  13          
  14          
  15          void delay(uint i)
  16          {       //延迟ius
  17   1              while(i--);
  18   1      }
  19          
  20          //延迟函数
  21          void Delay1ms(uint y)
  22          {
  23   1              uint x;
  24   1              for( ; y>0; y--)
  25   1              {
  26   2                      for(x=110; x>0; x--);
  27   2              }
  28   1      }
  29          
  30          //初始化函数
  31          uchar Ds18b20Init()
  32          {
  33   1              uchar i;
  34   1              DSPORT = 0;
  35   1              //将总线拉低480us~960us
  36   1              i = 73;   //单片机程序里面是i = 70;     
  37   1              while(i--);//延时642us
  38   1              DSPORT = 1;
  39   1              //然后拉高总线，如果DS18B20做出
  40   1              //反应会将在15us~60us后总线拉低
  41   1              i = 0;
  42   1              while(DSPORT)   
  43   1              {//等待DS18B20拉低总线
  44   2                      Delay1ms(1);
  45   2                      i++;
  46   2                      if(i>5)//等待>5ms
  47   2                      {
  48   3                              return 0;//初始化失败
  49   3                      }
  50   2              
  51   2              }
  52   1              return 1;//初始化成功
  53   1      }
  54          
C51 COMPILER V9.01   DS18B20_2                                                             01/03/2021 21:46:04 PAGE 2   

  55          //向传感器写字节
  56          void Ds18b20WriteByte(uchar dat)
  57          {
  58   1              uint i, j;
  59   1      
  60   1              for(j=0; j<8; j++)
  61   1              {
  62   2                      DSPORT = 0;               
  63   2                      //每写入一位数据之前先把总线拉低1us
  64   2                      i++;
  65   2                      DSPORT = dat & 0x01;  
  66   2                      //然后写入一个数据，从最低位开始 0000 0001
  67   2                      i=6;
  68   2                      while(i--); 
  69   2                      //延时68us，持续时间最少60us
  70   2                      DSPORT = 1;     
  71   2                      //然后释放总线，至少1us给总线恢复时
  72   2                      //间才能接着写入第二个数值
  73   2                      dat >>= 1;      
  74   2                      //传输完最低位,数据右移,传输次低
  75   2                      //位,依次循环      1000 1001 -> 0100 0100
  76   2              }
  77   1      }
  78          
  79          //从传感器读字节
  80          uchar Ds18b20ReadByte()
  81          {
  82   1              uchar byte, bi;//bi保存单位数据
  83   1              uint  i,j;      
  84   1              for(j=8; j>0; j--)
  85   1              {
  86   2                      DSPORT = 0;//先将总线拉低1us
  87   2                      i++;
  88   2                      DSPORT = 1;//总线拉高,然后释放总线
  89   2                      i++;
  90   2                      i++;//延时6us等待数据稳定
  91   2                      bi = DSPORT;     //读取数据，从最低位开始读取
  92   2                      byte = (byte >> 1) | (bi << 7);
  93   2                      /*如,byte=0000 0000,bi读取到一个最低位有效数字0000 0001,
  94   2                      左移七位1000 0000,byte右移一位0000 0000,和byte或,
  95   2                              byte=1000 0000,bi读取到一个最低位有效数字0000 0001,
  96   2                              左移七位1000 0000,byte右移一位0100 0000,和byte或,
  97   2                              byte=1100 0000,以此类推 
  98   2                      */                                                
  99   2                      while(i--);//延时45us
 100   2              }                               
 101   1              return byte;
 102   1      }
 103          
 104          //温度转换函数指令
 105          void  Ds18b20ChangTemp()
 106          {
 107   1              Ds18b20Init();
 108   1              Delay1ms(1);
 109   1              Ds18b20WriteByte(0xcc);         
 110   1              //跳过ROM操作命令                
 111   1              Ds18b20WriteByte(0x44);    
 112   1              //温度转换命令
 113   1              //Delay1ms(100);        
 114   1              //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 115   1         
 116   1      }
C51 COMPILER V9.01   DS18B20_2                                                             01/03/2021 21:46:04 PAGE 3   

 117          
 118          //读取温度数据指令
 119          void  Ds18b20ReadTempCom()
 120          {       
 121   1      
 122   1              Ds18b20Init();
 123   1              Delay1ms(1);
 124   1              Ds18b20WriteByte(0xcc);  
 125   1              //跳过ROM操作命令
 126   1              Ds18b20WriteByte(0xbe);  
 127   1              //发送读取温度命令
 128   1      }
 129          
 130          
 131          //温度读取函数
 132          int Ds18b20ReadTemp()
 133          {
 134   1              int temp = 0;
 135   1              //注意这里int是2字节16位
 136   1              uchar tmh, tml;
 137   1              //分别用于存放温度的低字节和高字节数据
 138   1              Ds18b20ChangTemp();                      
 139   1              //先写入转换命令
 140   1              Ds18b20ReadTempCom();           
 141   1              //然后等待转换完后发送读取温度命令
 142   1              tml = Ds18b20ReadByte();        
 143   1              //读取温度值共16位，先读低字节
 144   1              tmh = Ds18b20ReadByte();        
 145   1              //再读高字节
 146   1              temp = tmh;
 147   1              //先读取高八位   0000 0000 
 148   1              temp <<= 8;
 149   1              //将读取到的数据从temp低八位移位至高八位
 150   1              temp |= tml;
 151   1              //以或的形式读取低八位
 152   1              return temp;
 153   1      }
 154          
 155          //数据处理函数
 156          void datapros(int temp)          
 157          {       
 158   1              float tp;  
 159   1              //保存温度
 160   1              if(temp< 0)//当温度值为负数
 161   1              {
 162   2                      temp=temp-1;
 163   2                      temp=~temp;
 164   2                      tp=temp;
 165   2                      temp=tp*0.0625*100+0.5; 
 166   2                      //留两个小数点就*100，+0.5是四舍五入，因为
 167   2                      //C语言浮点数转换为整型的时候把小数点
 168   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5
 169   2                      //之后大于0.5的就是进1了，小于0.5的就
 170   2                      //算加上0.5，还是在小数点后面。
 171   2              }
 172   1              else
 173   1              {                       
 174   2                      tp=temp;
 175   2                      //因为数据处理有小数点所以将温度赋给一个浮点型变量
 176   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 177   2                      temp=tp*0.0625*100+0.5; 
 178   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮
C51 COMPILER V9.01   DS18B20_2                                                             01/03/2021 21:46:04 PAGE 4   

 179   2                      //点数转换为整型的时候把小数点后面的数自动去掉，
 180   2                      //不管是否大于0.5，而+0.5之后大于0.5的就是进1了，
 181   2                      //小于0.5的就算加上0.5，还是在小数点后面。
 182   2              }
 183   1      
 184   1      //      tt=bai*100+10*shi+ge;
 185   1      }                                         
 186          
 187          
 188          
 189          void  TemperatureDeal_2()
 190          {
 191   1              static uint temperature=0;
 192   1              temperature = Ds18b20ReadTemp();
 193   1      
 194   1              p_shi = temperature/10%10+'0';
 195   1              p_ge1 = temperature%10+'0';
 196   1               
 197   1      }
 198          
 199          /*显示温度*/
 200          void ShowTemperature_2()
 201          {
 202   1               TemperatureDeal_2();
 203   1              
 204   1      
 205   1              WriteAddress(0x4a); // 写 Date 的显示地址 , 将在第 1 行第 1 列开始显示
 206   1      
 207   1              //温度显示
 208   1              WriteData(p_shi);
 209   1              WriteData(p_ge1);
 210   1      
 211   1      //      WriteData(d_ge1);
 212   1              
 213   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    382    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
