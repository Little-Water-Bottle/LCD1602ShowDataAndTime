C51 COMPILER V9.01   TEMP                                                                  01/04/2021 22:20:21 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.obj
COMPILER INVOKED BY: D:\App_program\Keil4\keil4\install_location\C51\BIN\C51.EXE HardWare\temp.c BROWSE INCDIR(.\HardWar
                    -e;..\LM016L显示时钟和日期) DEBUG OBJECTEXTEND PRINT(.\temp.lst) OBJECT(temp.obj)

line level    source

   1          #include "temp.h"
   2          #include "LM016L.h"
   3          #include "reg52.h"
   4          
   5          /*******************************************************************************
   6          * 函数名         : Delay1ms
   7          * 函数功能                 : 延时函数
   8          * 输入           : 无
   9          * 输出           : 无
  10          *******************************************************************************/
  11          void Delay1ms(unsigned int y)
  12          {
  13   1              unsigned int x;
  14   1              for(y;y>0;y--)
  15   1                      for(x=110;x>0;x--);
  16   1      }
  17          
  18          /*******************************************************************************
  19          * 函数名         : Ds18b20Init
  20          * 函数功能                 : 初始化
  21          * 输入           : 无
  22          * 输出           : 初始化成功返回1，失败返回0
  23          *******************************************************************************/
  24          unsigned char Ds18b20Init()
  25          {
  26   1              unsigned int i;
  27   1              DSPORT=0;                        //将总线拉低480us~960us
  28   1              i=70;   
  29   1              while(i--);//延时642us
  30   1              DSPORT=1;                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  31   1              i=0;
  32   1              while(DSPORT)   //等待DS18B20拉低总线
  33   1              {
  34   2                      i++;
  35   2                      if(i>5000)//等待>5MS
  36   2                              return 0;//初始化失败   
  37   2              }
  38   1              return 1;//初始化成功
  39   1      }
  40          
  41          /*******************************************************************************
  42          * 函数名         : Ds18b20WriteByte
  43          * 函数功能                 : 向18B20写入一个字节
  44          * 输入           : com
  45          * 输出           : 无
  46          *******************************************************************************/
  47          void Ds18b20WriteByte(unsigned char dat)
  48          {
  49   1              unsigned int i,j;
  50   1              for(j=0;j<8;j++)
  51   1              {
  52   2                      DSPORT=0;                       //每写入一位数据之前先把总线拉低1us
  53   2                      i++;
  54   2                      DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
C51 COMPILER V9.01   TEMP                                                                  01/04/2021 22:20:21 PAGE 2   

  55   2                      i=6;
  56   2                      while(i--); //延时68us，持续时间最少60us
  57   2                      DSPORT=1;       //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  58   2                      dat>>=1;
  59   2              }
  60   1      }
  61          
  62          /*******************************************************************************
  63          * 函数名         : Ds18b20ReadByte
  64          * 函数功能                 : 读取一个字节
  65          * 输入           : com
  66          * 输出           : 无
  67          *******************************************************************************/
  68          unsigned char Ds18b20ReadByte()
  69          {
  70   1              unsigned char byte,bi;
  71   1              unsigned int i,j;       
  72   1              for(j=8;j>0;j--)
  73   1              {
  74   2                      DSPORT=0;//先将总线拉低1us
  75   2                      i++;
  76   2                      DSPORT=1;//然后释放总线
  77   2                      i++;
  78   2                      i++;//延时6us等待数据稳定
  79   2                      bi=DSPORT;       //读取数据，从最低位开始读取
  80   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  81   2                      byte=(byte>>1)|(bi<<7);                                           
  82   2                      i=4;            //读取完之后等待48us再接着读取下一个数
  83   2                      while(i--);
  84   2              }                               
  85   1              return byte;
  86   1      }
  87          
  88          /*******************************************************************************
  89          * 函数名         : Ds18b20ChangTemp
  90          * 函数功能                 : 让18b20开始转换温度
  91          * 输入           : com
  92          * 输出           : 无
  93          *******************************************************************************/
  94          void  Ds18b20ChangTemp()
  95          {
  96   1              Ds18b20Init();
  97   1              Delay1ms(1);
  98   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
  99   1              Ds18b20WriteByte(0x44);     //温度转换命令 
 100   1      }
 101          /*******************************************************************************
 102          * 函数名         : Ds18b20ReadTempCom
 103          * 函数功能                 : 发送读取温度命令
 104          * 输入           : com
 105          * 输出           : 无
 106          *******************************************************************************/
 107          void  Ds18b20ReadTempCom()
 108          {       
 109   1      
 110   1              Ds18b20Init();
 111   1              Delay1ms(1);
 112   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 113   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
 114   1      }
 115          /*******************************************************************************
 116          * 函数名         : Ds18b20ReadTemp
C51 COMPILER V9.01   TEMP                                                                  01/04/2021 22:20:21 PAGE 3   

 117          * 函数功能                 : 读取温度
 118          * 输入           : com
 119          * 输出           : 无
 120          *******************************************************************************/
 121          int Ds18b20ReadTemp()
 122          {
 123   1              int temp=0;
 124   1              unsigned char tmh,tml;
 125   1              Ds18b20ChangTemp();                      //先写入转换命令
 126   1              Ds18b20ReadTempCom();           //然后等待转换完后发送读取温度命令
 127   1              tml=Ds18b20ReadByte();          //读取温度值共16位，先读低字节
 128   1              tmh=Ds18b20ReadByte();          //再读高字节
 129   1              temp=tmh;
 130   1              temp<<=8;
 131   1              temp|=tml;
 132   1              return temp;
 133   1      }
 134          
 135          ///*******************************************************************************
 136          //* 函数名         : LcdDisplay()
 137          //* 函数功能               : LCD显示读取到的温度
 138          //* 输入           : v
 139          //* 输出                 : 无
 140          //*******************************************************************************/
 141          void Lcd_Tem_Display(int temp)   //lcd显示
 142          {
 143   1          
 144   1              unsigned char i=0, datas[8] = {0}; //定义数组
 145   1              float tp;  
 146   1              if(temp< 0)                             //当温度值为负数
 147   1              {
 148   2                      WriteInstruction(0xC0);         //写地址 80表示初始地址
 149   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 150   2                      temp=temp-1;
 151   2                      temp=~temp;
 152   2                      tp=temp;
 153   2                      temp=tp*0.0625*100;     
 154   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 155   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 156   2                      //算由?.5，还是在小数点后面。
 157   2              datas[0] = '-';
 158   2              }
 159   1              else
 160   1              {                       
 161   2                      tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
 162   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 163   2                      temp=tp*0.0625*100;     
 164   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 165   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 166   2                      //算加上0.5，还是在小数点后面。
 167   2                              datas[0] = '+';
 168   2              }
 169   1      
 170   1              datas[1] = temp % 10000 / 1000+'0';
 171   1              datas[2] = temp % 1000 / 100+'0';
 172   1              datas[3] = '.';
 173   1              datas[4] = temp % 100 / 10+'0';
 174   1              datas[5] = temp % 10+'0';
 175   1      //      datas[6] = 0xdf;  //温度符号，占两个位置
 176   1      //      datas[7] = 'C';
 177   1      
 178   1      
C51 COMPILER V9.01   TEMP                                                                  01/04/2021 22:20:21 PAGE 4   

 179   1      
 180   1              WriteAddress(0x49);
 181   1              Delay1ms(50);   //此处延时是有必要的，不延时或者延时过少都会导致温度显示时显示乱码闪烁
 182   1      
 183   1              
 184   1      //      while (i<=7)
 185   1              while (datas[i] != '\0')
 186   1              {
 187   2                      WriteData(datas[i]);
 188   2                      i++;    
 189   2              }
 190   1              WriteData(0x00); //显示温度符号，占一个位置
 191   1      
 192   1      
 193   1      
 194   1               
 195   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
